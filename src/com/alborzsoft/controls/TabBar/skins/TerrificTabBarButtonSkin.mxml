<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin  minHeight="25" initialize="sparkskin1_creationCompleteHandler(event)"
			 xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark">
	
	

	<fx:Metadata>
		[HostComponent("com.alborzsoft.controls.TabBar.TerrificTabBarButton")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.components.ButtonBar;
			import spark.components.ButtonBarButton;
			
			protected function gr_creationComplete(evt:FlexEvent):void {
				
				 var dataObj:Object = hostComponent.data;
			
				 img_icon.source = dataObj.icon;
				 
				 
				 hostComponent.toolTip = dataObj.label; 
				 header_Display.text = dataObj.label;
			  	if(hostComponent.width>=40)
				 closeButton.x=hostComponent.width-24;
				else
					closeButton.x = (hostComponent.width/2)-6;
					/* evt.currentTarget.y=6; */
				
				if(img_icon.source!=null)
				{	
					if(hostComponent.width>70)
						header_Display.left= 30;
					else
					{
						if(hostComponent.width>50)
							header_Display.left = 14;
						else
							header_Display.visible=false;
					}
				}
				else
				{
					if(hostComponent.width>40)
						header_Display.left = 14;
					else
						header_Display.visible=false;
				}
				 closeButton.top = 6;
			}
			
			protected function CloseTab_Handler():void{
			
			}
			/* Define the skin elements that should not be colorized. 
			For toggle button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = [];
			
			override public function get colorizeExclusions():Array {return exclusions;}
			
			protected function sparkskin1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				this.minWidth = this.parentApplication.tabBar.btnminwidth;
				this.maxWidth = this.parentApplication.tabBar.btnmaxwidth;
				this.parentApplication.tabBar.imgicnwidth = img_icon.width;
			}
			
		
			
			
			
			protected function grp_tab_updateCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub

				if(img_icon.source!=null)
				{	
					if(hostComponent.width>70)
						header_Display.left= 30;
					else
					{
						if(hostComponent.width>50)
							header_Display.left = 14;
						else
							header_Display.visible=false;
					}
				}
				else
				{
					if(hostComponent.width>40)
						header_Display.left = 14;
					else
						header_Display.visible=false;
				}
			}
			
		]]>
	</fx:Script>
	

	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>

	<!-- tab -->
	<s:Group left="0" right="0" top="0" bottom="0" scaleGridLeft="15" id="grp_tab"  scaleGridRight="50" scaleGridTop="1" scaleGridBottom="24" updateComplete="grp_tab_updateCompleteHandler(event)" >
		<s:Path left="0" right="0" top="0" bottom="0">
			<s:data>M 0,25 C 10,23 5,2 15,0 L 50,0 C 60,2 55,23 65,25 Z</s:data>
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:entries>
						<fx:Array>
							<s:GradientEntry color="0xFFFFFF" />
							<s:GradientEntry id="grd_bottom" color="0xF9F9F9" />
						</fx:Array>
					</s:entries>
				</s:LinearGradient>
			</s:fill>
			
			<s:stroke>
				<s:SolidColorStroke id="stroke_2" color="0x000000" weight="1" alpha="0.5"/>
			</s:stroke>
		</s:Path>
	</s:Group>
	
	<!-- Added by dhwani -->
	<!-- icon image-->
	<s:Image id="img_icon" left="10" top="2" bottom="0" verticalAlign="middle" height="16" width="16"  />
	<!-- label -->
		
	<!--<s:Label id="labelDisplay" left="30" top="2" bottom="0" right="{(closeButton.visible ? 30 : 14)}"
			 verticalAlign="middle" maxDisplayedLines="1" 
			 color="#000000"/>-->
	
	<s:TextInput id="header_Display" left="{(img_icon.visible ? 30 : 14)}"   top="2" bottom="0" right="{(closeButton.visible ? 30 : 14)}" height="16" 
				 color="#000029" borderAlpha="0" editable="false" borderVisible="false" contentBackgroundAlpha="0"/>
	
	
	
	<s:Rect left="3" right="3" height="{stroke_2.weight}" bottom="0" visible.selectedStates="true" visible="false">
		<s:fill>
			<s:SolidColor color="{grd_bottom.color}" />
		</s:fill>
	</s:Rect>
	
	
	<s:Group left="0" right="0" top="0" bottom="0" scaleGridLeft="15" scaleGridRight="50" scaleGridTop="1" scaleGridBottom="24">
		<s:Path left="0" right="0" top="0" bottom="0">
			<s:data>M 0,25 C 10,23 5,2 15,0 L 50,0 C 60,2 55,23 65,25 Z</s:data>
			<s:fill>
				<s:SolidColor color="0x000000" alpha.disabled="0.5" alpha.selectedStates="0" alpha="0.3" alpha.over="0.2" />
			</s:fill>
		</s:Path>
	</s:Group>
	
	
	<!-- close button -->
	<s:Button id="closeButton"  click="CloseTab_Handler()" skinClass="com.alborzsoft.controls.TabBar.skins.TerrificCloseButtonSkin" 
			  creationComplete="gr_creationComplete(event)" />
	
	
</s:SparkSkin>